name: Build test and deploy

on:
  push:
    tags: ['*']
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
      - 'feature/**'
      - 'fix/**'
    paths-ignore:
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'README.md'
      - 'renovate.json'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [adopt@1.11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Lint with scalafmt
        run: sbt scalafmtCheckAll

      - name: Check with scalafix
        run: sbt 'scalafixAll --check'

      - name: Test
        run: sbt test

      - name: Plugin test
        run: sbt scripted

  publish:
    name: Publish on maven central
    needs: [build]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
    steps:
      - name: Fetch sources
        uses: actions/checkout@v3.0.2
        with:
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v13
        with:
          java-version: "adopt@1.11"

      - name: Install npm package
        run: npm install

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: npx semantic-release
